---
// src/components/StarRating.astro
// Este componente recibe un 'rating' (ej. 4.5) y dibuja las estrellas

interface Props {
  rating: number;
}
const { rating } = Astro.props;

const totalStars = 5;
const fullStars = Math.floor(rating);
const hasHalfStar = rating % 1 !== 0;
const emptyStars = totalStars - fullStars - (hasHalfStar ? 1 : 0);

// Icono SVG para una estrella (puedes estilizarlo como quieras)
const StarIcon = (
  <svg class="w-5 h-5 fill-current" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
    <path d="M10 15l-5.878 3.09 1.123-6.545L.489 7.09l6.572-.955L10 0l2.939 6.135 6.572.955-4.756 4.455 1.123 6.545z"/>
  </svg>
);
---
<div class="flex items-center text-yellow-400">
  {Array(fullStars).fill(0).map(() => (
    <Fragment set:html={StarIcon} />
  ))}

  {hasHalfStar && (
    <div class="relative">
      <div class="absolute inset-0 overflow-hidden" style="width: 50%;">
        <Fragment set:html={StarIcon} />
      </div>
      <div class="text-gray-600">
        <Fragment set:html={StarIcon} />
      </div>
    </div>
  )}

  {Array(emptyStars).fill(0).map(() => (
    <div class="text-gray-600">
      <Fragment set:html={StarIcon} />
    </div>
  ))}
</div>